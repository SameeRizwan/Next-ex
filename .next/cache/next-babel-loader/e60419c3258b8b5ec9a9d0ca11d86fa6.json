{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Samee\\\\Desktop\\\\Portfolio\\\\react-reserve-master\\\\pages\\\\recomended.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport catchErrors from \"../utils/catchErrors\";\nimport baseUrl from \"../utils/baseUrl\";\nimport { withRouter } from 'next/router';\nimport PlacesSummary from '../components/Places/PlacesSummary';\nimport { Button } from 'antd';\n\nfunction Recommended(_x) {\n  return _Recommended.apply(this, arguments);\n}\n\n_c2 = Recommended;\n\nfunction _Recommended() {\n  _Recommended = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(props) {\n    var data, url, payload, response, placedata;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            data = props.router.query.data;\n            url = \"\".concat(baseUrl, \"/api/getrecomend\");\n            payload = {\n              data: data\n            };\n            _context2.next = 5;\n            return axios.get(url, payload);\n\n          case 5:\n            response = _context2.sent;\n            placedata = response.data;\n            return _context2.abrupt(\"return\", __jsx(React.Fragment, null, __jsx(Button, {\n              size: \"large\",\n              onClick: handleChange,\n              className: \"recomend-button\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 3\n              }\n            }, \"Get Places According to your Interest\"), __jsx(\"div\", {\n              className: \"places-form\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 3\n              }\n            }, __jsx(PlacesSummary, {\n              placesdata: placedata,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 5\n              }\n            }))));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _Recommended.apply(this, arguments);\n}\n\n_c = Recommended;\n\nRecommended.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(props.data); // fetch data on server\n            // const url = `${baseUrl}/api/getrecomend`;\n            // const payload = { ...data };\n            // const response = await axios.get(url, payload);\n            // return { placesData: response.data };\n            // return response data as an object\n            // note: this object will be merged with existing props\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default _c3 = withRouter(Recommended);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Recommended\");\n$RefreshReg$(_c2, \"Recommended\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["C:/Users/Samee/Desktop/Portfolio/react-reserve-master/pages/recomended.js"],"names":["axios","catchErrors","baseUrl","withRouter","PlacesSummary","Button","Recommended","props","data","router","query","url","payload","get","response","placedata","handleChange","getInitialProps","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAASC,MAAT,QAAuB,MAAvB;;SAEeC,W;;;;MAAAA,W;;;0EAAf,kBAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,YAAAA,IAFR,GAEeD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBF,IAFlC;AAGQG,YAAAA,GAHR,aAGiBT,OAHjB;AAIQU,YAAAA,OAJR,GAIkB;AAAEJ,cAAAA,IAAI,EAAJA;AAAF,aAJlB;AAAA;AAAA,mBAKyBR,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAeC,OAAf,CALzB;;AAAA;AAKQE,YAAAA,QALR;AAMQC,YAAAA,SANR,GAMoBD,QAAQ,CAACN,IAN7B;AAAA,8CAQS,4BACP,MAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,OAAb;AAAqB,cAAA,OAAO,EAAEQ,YAA9B;AAA4C,cAAA,SAAS,EAAC,iBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADO,EAIP;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,MAAC,aAAD;AAAe,cAAA,UAAU,EAAED,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAJO,CART;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;KAAeT,W;;AAmBfA,WAAW,CAACW,eAAZ;AAAA,sEAA8B,iBAAOV,KAAP;AAAA;AAAA;AAAA;AAAA;AAE1BW,YAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACC,IAAlB,EAF0B,CAG1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAT0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;AAYA,qBAAeL,UAAU,CAACG,WAAD,CAAzB","sourcesContent":["import axios from \"axios\";\r\nimport catchErrors from \"../utils/catchErrors\";\r\nimport baseUrl from \"../utils/baseUrl\";\r\nimport { withRouter } from 'next/router'\r\nimport PlacesSummary from '../components/Places/PlacesSummary'\r\nimport { Button } from 'antd';\r\n\r\nasync function Recommended(props) {\r\n\r\n  const data = props.router.query.data;\r\n  const url = `${baseUrl}/api/getrecomend`;\r\n  const payload = { data };\r\n  const response = await axios.get(url, payload);\r\n  const placedata = response.data;\r\n\r\n  return <>\r\n  <Button size=\"large\" onClick={handleChange} className=\"recomend-button\">\r\n   Get Places According to your Interest\r\n  </Button>\r\n  <div className=\"places-form\">\r\n    <PlacesSummary placesdata={placedata} />\r\n  </div>\r\n\r\n</>;\r\n}\r\n\r\nRecommended.getInitialProps = async (props) => {\r\n  \r\n    console.log(props.data);\r\n    // fetch data on server\r\n    // const url = `${baseUrl}/api/getrecomend`;\r\n    // const payload = { ...data };\r\n    // const response = await axios.get(url, payload);\r\n    // return { placesData: response.data };\r\n    // return response data as an object\r\n    // note: this object will be merged with existing props\r\n  };\r\n\r\nexport default withRouter(Recommended);\r\n"]},"metadata":{},"sourceType":"module"}