{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samee\\\\Desktop\\\\Portfolio\\\\react-reserve-master\\\\pages\\\\recomended.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport catchErrors from \"../utils/catchErrors\";\nimport baseUrl from \"../utils/baseUrl\";\nimport { withRouter } from 'next/router';\nimport PlacesSummary from '../components/Places/PlacesSummary';\nimport { Button } from 'antd';\n\nasync function Recommended(props) {\n  const data = props.router.query.data;\n  const url = `${baseUrl}/api/getrecomend`;\n  const payload = {\n    data\n  };\n  const response = await axios.get(url, payload);\n  const placedata = response.data;\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    size: \"large\",\n    onClick: handleChange,\n    className: \"recomend-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  }, \"Get Places According to your Interest\"), __jsx(\"div\", {\n    className: \"places-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, __jsx(PlacesSummary, {\n    placesdata: places,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  })));\n}\n\nRecommended.getInitialProps = async props => {\n  console.log(props.data); // fetch data on server\n  // const url = `${baseUrl}/api/getrecomend`;\n  // const payload = { ...data };\n  // const response = await axios.get(url, payload);\n  // return { placesData: response.data };\n  // return response data as an object\n  // note: this object will be merged with existing props\n};\n\nexport default withRouter(Recommended);","map":{"version":3,"sources":["C:/Users/Samee/Desktop/Portfolio/react-reserve-master/pages/recomended.js"],"names":["axios","catchErrors","baseUrl","withRouter","PlacesSummary","Button","Recommended","props","data","router","query","url","payload","response","get","placedata","handleChange","places","getInitialProps","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,SAASC,MAAT,QAAuB,MAAvB;;AAEA,eAAeC,WAAf,CAA2BC,KAA3B,EAAkC;AAEhC,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBF,IAAhC;AACA,QAAMG,GAAG,GAAI,GAAET,OAAQ,kBAAvB;AACA,QAAMU,OAAO,GAAG;AAAEJ,IAAAA;AAAF,GAAhB;AACA,QAAMK,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUH,GAAV,EAAeC,OAAf,CAAvB;AACA,QAAMG,SAAS,GAAGF,QAAQ,CAACL,IAA3B;AAKA,SAAO,4BACP,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,OAAO,EAAEQ,YAA9B;AAA4C,IAAA,SAAS,EAAC,iBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADO,EAIP;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,UAAU,EAAEC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJO,CAAP;AASD;;AAEDX,WAAW,CAACY,eAAZ,GAA8B,MAAOX,KAAP,IAAiB;AAE3CY,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACC,IAAlB,EAF2C,CAG3C;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAVH;;AAYA,eAAeL,UAAU,CAACG,WAAD,CAAzB","sourcesContent":["import axios from \"axios\";\r\nimport catchErrors from \"../utils/catchErrors\";\r\nimport baseUrl from \"../utils/baseUrl\";\r\nimport { withRouter } from 'next/router'\r\nimport PlacesSummary from '../components/Places/PlacesSummary'\r\nimport { Button } from 'antd';\r\n\r\nasync function Recommended(props) {\r\n\r\n  const data = props.router.query.data;\r\n  const url = `${baseUrl}/api/getrecomend`;\r\n  const payload = { data };\r\n  const response = await axios.get(url, payload);\r\n  const placedata = response.data;\r\n\r\n\r\n\r\n\r\n  return <>\r\n  <Button size=\"large\" onClick={handleChange} className=\"recomend-button\">\r\n   Get Places According to your Interest\r\n  </Button>\r\n  <div className=\"places-form\">\r\n    <PlacesSummary placesdata={places} />\r\n  </div>\r\n\r\n</>;\r\n}\r\n\r\nRecommended.getInitialProps = async (props) => {\r\n  \r\n    console.log(props.data);\r\n    // fetch data on server\r\n    // const url = `${baseUrl}/api/getrecomend`;\r\n    // const payload = { ...data };\r\n    // const response = await axios.get(url, payload);\r\n    // return { placesData: response.data };\r\n    // return response data as an object\r\n    // note: this object will be merged with existing props\r\n  };\r\n\r\nexport default withRouter(Recommended);\r\n"]},"metadata":{},"sourceType":"module"}