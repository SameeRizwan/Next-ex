{"ast":null,"code":"var _jsxFileName = \"D:\\\\FYP\\\\components\\\\Places\\\\PlacesSummary.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card } from 'semantic-ui-react';\n\nfunction PlacesSummary({\n  placesdata\n}) {\n  function handleChange(event) {\n    Router.push('/placeinfo');\n  }\n\n  console.log(placesdata);\n\n  function mapPlaces(placesdata) {\n    return placesdata.map(place => ({\n      header: place.name,\n      meta: place.description,\n      color: 'teal',\n      childkey: place._id,\n      href: `/place?_id=${place._id}`,\n      image: place.picture\n    }));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Card.Group, {\n    itemsPerRow: \"4\",\n    stackable: true,\n    items: mapPlaces(placesdata),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), \";\");\n}\n\nexport default PlacesSummary;","map":{"version":3,"sources":["D:/FYP/components/Places/PlacesSummary.js"],"names":["Card","PlacesSummary","placesdata","handleChange","event","Router","push","console","log","mapPlaces","map","place","header","name","meta","description","color","childkey","_id","href","image","picture"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,mBAArB;;AAIA,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAuC;AAEnC,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzBC,IAAAA,MAAM,CAACC,IAAP,CAAY,YAAZ;AACD;;AAEHC,EAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;;AACA,WAASO,SAAT,CAAmBP,UAAnB,EAA+B;AAC3B,WAAOA,UAAU,CAACQ,GAAX,CAAeC,KAAK,KAAK;AAC5BC,MAAAA,MAAM,EAAED,KAAK,CAACE,IADc;AAE5BC,MAAAA,IAAI,EAAEH,KAAK,CAACI,WAFgB;AAG5BC,MAAAA,KAAK,EAAE,MAHqB;AAI5BC,MAAAA,QAAQ,EAAEN,KAAK,CAACO,GAJY;AAK5BC,MAAAA,IAAI,EAAG,cAAaR,KAAK,CAACO,GAAI,EALF;AAM5BE,MAAAA,KAAK,EAAET,KAAK,CAACU;AANe,KAAL,CAApB,CAAP;AASH;;AAGD,SAAO,4BACH,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,WAAW,EAAC,GAAxB;AAA4B,IAAA,SAAS,MAArC;AAAsC,IAAA,KAAK,EAAEZ,SAAS,CAACP,UAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,MAAP;AAGH;;AAGD,eAAeD,aAAf","sourcesContent":["import { Card } from 'semantic-ui-react';\r\n\r\n\r\n\r\nfunction PlacesSummary({ placesdata }) {\r\n\r\n    function handleChange(event) {\r\n        Router.push('/placeinfo')\r\n      }\r\n\r\n    console.log(placesdata)\r\n    function mapPlaces(placesdata) {\r\n        return placesdata.map(place => ({\r\n            header: place.name,\r\n            meta: place.description,\r\n            color: 'teal',\r\n            childkey: place._id,\r\n            href: `/place?_id=${place._id}`,\r\n            image: place.picture,\r\n        \r\n        }))\r\n    }\r\n\r\n\r\n    return <>\r\n        <Card.Group itemsPerRow=\"4\" stackable items={mapPlaces(placesdata)} />;\r\n    </>;\r\n}\r\n\r\n\r\nexport default PlacesSummary;\r\n"]},"metadata":{},"sourceType":"module"}